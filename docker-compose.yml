version: '3.9'

services:
  mongodb:
    image: mongo:8.0.0-rc13
    ports:
      - "27017:27017"
    command: mongod
    volumes:
      - microservice-mongo-data:/data/db
    healthcheck:
      test: [ "CMD","mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 2s
      retries: 60

  mysql:
    image: mysql:9.0.1
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpwd
      MYSQL_DATABASE: review-db
      MYSQL_USER: user
      MYSQL_PASSWORD: pwd
    volumes:
      - microservice-mysql-data:/var/lib/mysql
    healthcheck:
      test: "/usr/bin/mysql --user=user --password=pwd --execute \"SHOW DATABASES;\""
      interval: 5s
      timeout: 2s
      retries: 60

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:7.7.0
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      # Required if services are started in Debug mode
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_started

  eureka-server:
    build: spring-cloud/eureka-server
    ports:
      - "8761:8761"

  product:
    build: product
    environment:
      MONGO_PRODUCT_URL: mongodb
      MONGO_PRODUCT_DATABASE: product-db
      KAFKA_PRODUCT_BROKER: kafka
      KAFKA_PRODUCT_PORT: 9092
      APP_EUREKA_SERVER: eureka-server
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_started

  recommendation:
    build: recommendation
    environment:
      MONGO_RECOMMENDATION_URL: mongodb
      MONGO_RECOMMENDATION_DATABASE: recommendation-db
      KAFKA_RECOMMENDATION_BROKER: kafka
      KAFKA_RECOMMENDATION_PORT: 9092
      APP_EUREKA_SERVER: eureka-server
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_started

  review:
    build: review
    environment:
      MYSQL_REVIEW_URL: jdbc:mysql://mysql/review-db
      MYSQL_REVIEW_USER: user
      MYSQL_REVIEW_PWD: pwd
      KAFKA_REVIEW_BROKER: kafka
      KAFKA_REVIEW_PORT: 9092
      APP_EUREKA_SERVER: eureka-server
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started

  composite-product:
    build: composite-product
    ports:
      - "8080:8080"
    environment:
      # Only needed without Eureka-Server
      #APP_PRODUCT_SERVICE_URL: product
      #APP_RECOMMENDATION_SERVICE_URL: recommendation
      #APP_REVIEW_SERVICE_URL: review
      APP_KAFKA_BROKER: kafka
      APP_KAFKA_PORT: 9092
      APP_EUREKA_SERVER: eureka-server
    depends_on:
      kafka:
        condition: service_started

volumes:
  microservice-mongo-data:
  microservice-mysql-data: